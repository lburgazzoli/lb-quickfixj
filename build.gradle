buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.0'
    }
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {
    ext {
        versions = [
            slf4j                : '1.7.7',
            log4j2               : '2.0.2',
            netty                : '4.0.21.Final',
            javassist            : '3.18.2-GA',
            mina1                : '1.1.7',
            osgi                 : '5.0.0',
            reactor              : '1.1.4.RELEASE',
            karaf                : '3.0.2',
            junit                : '4.11',
            disruptor            : '3.3.0',
            guava                : '18.0',
            openHftJavaLang      : '6.4.6',
            openHftJavaChronicle : '3.2.1',
            hazelcast            : '3.3.1',
            groovy               : '2.3.6',
            lbHazlecast          : '3.3.1-SNAPSHOT',
            lbKarafCommon        : '3.0.2-SNAPSHOT',
            commonsLang          : '3.3.2',
            commonsCollections   : '4.0',
            commonsPool          : '2.2',
            commonsIO            : '2.4',
            javolution           : '6.0.0',
            dom4j                : '1.6.1',
            proxool              : '0.9.1'
        ]
        
        gradleVersion               = '2.1'
        gradleScriptDir             = "${rootProject.projectDir}/gradle"
            
        if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
            nexusUsername = sonatypeUsername
            nexusPassword = sonatypePassword
        } else {
            nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
            nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
        }
        
        prefix              = 'lb'
        isReleaseVersion    = !version.endsWith("SNAPSHOT")
        gitRoot             = "https://github.com/lburgazzoli"
        gitProject          = "https://github.com/lburgazzoli/lb-quickfixj"
        deploySnapshot      = "https://oss.sonatype.org/content/repositories/snapshots"
        osgiVersion         = project.version.replaceAll('-','.')
    }
        
    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: "maven"
    apply plugin: "osgi"
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'com.github.ben-manes.versions'

    version             = '2.0.0-SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenLocal()
        mavenCentral()

        maven { url "http://repo.springsource.org/release" }
        maven { url "http://repository.springsource.com/maven/bundles/release" }
        maven { url "http://repository.springsource.com/maven/bundles/external" }
        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$versions.slf4j"
        compile "org.slf4j:slf4j-ext:$versions.slf4j"
        compile "org.slf4j:jul-to-slf4j:$versions.slf4j"

        compile "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-jcl:$versions.log4j2"
        compile "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"

        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "commons-io:commons-io:$versions.commonsIO"
        compile "org.apache.commons:commons-collections4:$versions.commonsCollections"
        
        compile "com.google.guava:guava:$versions.guava"
        compile "com.lmax:disruptor:$versions.disruptor"
        compile "org.javolution:javolution-core-java:$versions.javolution"
        compile "org.dom4j:com.springsource.org.dom4j:$versions.dom4j"
        compile "org.logicalcobwebs:com.springsource.org.logicalcobwebs.proxool:$versions.proxool"
        compile "net.openhft:lang:$versions.openHftJavaLang"
        compile "net.openhft:chronicle:$versions.openHftJavaChronicle"
        compile "org.codehaus.groovy:groovy:$versions.groovy"

        testCompile "junit:junit:$versions.junit"
    }

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.prefix}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = osgiVersion
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.prefix}-${project.name}-${osgiVersion}"
        manifest.attributes['Implementation-Version' ] = osgiVersion
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath  = project.runtimeClasspath
    }
    
    // *************************************************************************
    //
    // *************************************************************************

    nexus {
        attachJavadoc         = true
        attachSources         = true
        attachTests           = false
        sign                  = false
    }

    modifyPom {
        project {
            name          = "${project.prefix}-${project.name}"
            description   = "${project.prefix}-${project.name}"
            url           = "${project.gitProject}"
            packaging     = 'jar'

            licenses {
                license {
                    name         = "The Apache Software License, Version 2.0"
                    url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url                 = "${project.gitProject}"
                connection          = "scm:git:${project.gitProject}.git"
                developerConnection = "scm:git:${project.gitProject}.git"
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

