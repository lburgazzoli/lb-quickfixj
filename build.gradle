
// *****************************************************************************
//
// *****************************************************************************

subprojects {

    ext {
        slf4jVersion                = '1.7.5'
        log4jVersion                = '1.2.17'
        nettyVersion                = '4.0.19.Final'
        javassistVersion            = '3.18.0-GA';
        mina1Version                = '1.1.7'
        osgiVersion                 = '5.0.0'
        reactorVersion              = '1.1.0.RELEASE'
        lbKarafCommonVersion        = '3.0.1.SNAPSHOT'
        karafVersion                = '3.0.0'
        junitVersion                = '4.11'
        openHftJavaLangVersion      = '6.3.4'
        openHftJavaChronicleVersion = '3.0a'
        hazelcastVersion            = '3.2.1'
        groovyVersion               = '2.2.2'
    
        gradleVersion               = '1.11'
        gradleScriptDir             = "${rootProject.projectDir}/gradle"
            
        if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
            ciUsr = sonatypeUsername
            ciPwd = sonatypePassword
        } else {
            ciUsr = "$System.env.CI_DEPLOY_USERNAME"
            ciPwd = "$System.env.CI_DEPLOY_PASSWORD"
        }
        
        prefix              = 'lb'
        isReleaseVersion    = !version.endsWith("SNAPSHOT")
        gitRoot             = "https://github.com/lburgazzoli"
        gitProject          = "https://github.com/lburgazzoli/lb-quickfixj"
        deploySnapshot      = "https://oss.sonatype.org/content/repositories/snapshots"
    }
        
    apply plugin: "java"
    apply plugin: "groovy"
    apply plugin: "maven"
    apply plugin: "osgi"

    version             = '2.0.0-SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'

    repositories {
        maven { url "http://repo2.maven.org/maven2" }
        maven { url "http://repo1.maven.org/maven2" }
        maven { url "http://repo.springsource.org/release" }
        //maven { url "http://repo.springsource.org/libs-milestone" }
        maven { url "http://repository.springsource.com/maven/bundles/release" }
        maven { url "http://repository.springsource.com/maven/bundles/external" }
        maven { url "http://oss.sonatype.org/content/groups/public" }

        mavenLocal()

        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }

    dependencies {
        compile "org.apache.commons:commons-math3:3.2"
        compile "org.apache.commons:commons-lang3:3.3.2"
        compile "org.apache.commons:commons-compress:1.5"
        compile "commons-io:commons-io:2.4"
        compile "commons-codec:commons-codec:1.9"
        compile "commons-collections:commons-collections:3.2.1"
        compile "commons-dbcp:commons-dbcp:1.4"
        compile "commons-dbutils:commons-dbutils:1.5"
        compile "commons-lang:commons-lang:2.6"
        compile "commons-logging:commons-logging:1.1.2"
        compile "commons-pool:commons-pool:1.6"
        compile "commons-net:commons-net:3.3"
        compile "commons-cli:commons-cli:1.2"
        compile "commons-configuration:commons-configuration:1.9"
        compile "log4j:log4j:$log4jVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-ext:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        compile "com.google.guava:guava:16.0.1"
        compile "com.lmax:disruptor:3.2.1"
        compile "org.javolution:javolution-core-java:6.0.0"
        compile "org.dom4j:com.springsource.org.dom4j:1.6.1"
        compile "org.logicalcobwebs:com.springsource.org.logicalcobwebs.proxool:0.9.1"
        compile "net.openhft:lang:$openHftJavaLangVersion"
        compile "net.openhft:chronicle:$openHftJavaChronicleVersion"
        compile "org.codehaus.groovy:groovy:$groovyVersion"

        testCompile "junit:junit:$junitVersion"
    }

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.prefix}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = project.version
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.prefix}-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version' ] = project.version
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath  = project.runtimeClasspath
    }
    
    // *************************************************************************
    //
    // *************************************************************************

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }
 
    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
    
    // *************************************************************************
    //
    // *************************************************************************

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
 
                repository(url: deploySnapshot) {
                    authentication(
                        userName: "${project.ciUsr}",
                        password: "${project.ciPwd}"
                    )
                }
 
                pom {
                    project {
                        name          = "${project.prefix}-${project.name}"
                        description   = "${project.prefix}-${project.name}"
                        url           = "${project.gitProject}"
                        packaging     = 'jar'
        
                        licenses {
                            license {
                        	    name         = "The Apache Software License, Version 2.0"
                        		url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        		distribution = "repo"
                        	}
                        }
                    
                        scm {
                            url                 = "${project.gitProject}"
                            connection          = "scm:git:${project.gitProject}.git"
                            developerConnection = "scm:git:${project.gitProject}.git"
                        }
                    }
                }
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

